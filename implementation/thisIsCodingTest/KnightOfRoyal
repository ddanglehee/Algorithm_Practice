class KnightOfRoyal {
    fun solution() {
        val input = System.`in`.bufferedReader().readLine().split("").subList(1, 3)
        val curX = input[0].single().code - 96
        val curY = input[1].toInt()

        val moves = listOf(Pair(2, 1), Pair(2, -1), Pair(-2, 1), Pair(-2, -1), Pair(1, 2), Pair(-1, 2), Pair(1, -2), Pair(-1, -2))
        var result = 0

        for (move in moves) {
            val tmpX = curX - move.first
            val tmpY = curY - move.second

            if (tmpX in 1..8 && tmpY in 1..8) {
                result++
            }
        }

        println(result)
    }
}